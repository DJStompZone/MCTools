name: MCTools (Beta)

on:
  workflow_dispatch:
  push:
    branches: [ beta ]
    paths:
      - 'MCTools/**'
      - 'MCTools.SDK/**'
  pull_request:
    branches: [ beta ]
    paths:
      - 'MCTools/**'
      - 'MCTools.SDK/**'

env:
  CSPROJ: MCTools/MCTools.csproj
  PUBLISH_PATH: bin/Publish
  RELEASE_TYPE: Release
  ENVIRONMENT: Production
  RELEASETYPE: Beta
  SERVER_TARGET: /var/www/mctools-beta

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ${{ env.CSPROJ }}
    - name: Build
      run: dotnet build ${{ env.CSPROJ }} -c ${{ env.RELEASE_TYPE }} --no-restore
    - name: Test
      run: dotnet test ${{ env.CSPROJ }} --no-build --verbosity normal
    - name: Get Git Tag
      id: short-sha
      run: echo "::set-output name=sha::$(echo ${GITHUB_SHA:0:7})"
    - name: Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: 'MCTools/wwwroot/appsettings.json'
      env:
        Application.Environment: ${{ env.ENVIRONMENT }}
        Application.ReleaseType: ${{ env.RELEASETYPE }}
        Application.GitTag: ${{ steps.short-sha.outputs.sha }}
    - name: Remove Existing App
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.PORT }}
        script: sudo rm -rf ${{ env.SERVER_TARGET }}
    - name: Publish
      run: dotnet publish ${{ env.CSPROJ }} -c ${{ env.RELEASE_TYPE }} -o ${{ env.PUBLISH_PATH }}
    - name: Deploy
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.PORT }}
        source: "${{ env.PUBLISH_PATH }}/*"
        target: ${{ env.SERVER_TARGET }}
        strip_components: 2
    - name: Change ownership
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.PORT }}
        script: sudo chown -R www-data:www-data ${{ env.SERVER_TARGET }}
